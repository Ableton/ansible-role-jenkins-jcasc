# In JCasC, view information isn't saved back to the config and is lost when the Jenkins
# controller is restarted. This task dumps Jenkins' running configuration for parsing or
# backup purposes. This task isn't run as part of the default tasks, but is provided to
# make backups easier. Note that this task requires some extra variables to be defined:
#
# - jenkins_api_token: API token for the jenkins_api_user user.
# - jenkins_api_user: Jenkins user to use for running the backup script.
# - jenkins_target_yaml_file: Output file to write.

---
- name: Assert that required variables are defined
  ansible.builtin.assert:
    that:
      - jenkins_api_token is defined
      - jenkins_api_token != ""
      - jenkins_api_user is defined
      - jenkins_api_user != ""
      - jenkins_target_yaml_file is defined
      - jenkins_target_yaml_file != ""
    quiet: true

- name: Read existing Jenkins config
  community.general.jenkins_script:
    script: |
      import io.jenkins.plugins.casc.ConfigurationAsCode
      import java.nio.charset.StandardCharsets
      import org.apache.commons.io.output.WriterOutputStream

      try {
        ConfigurationAsCode.get().export(
          new WriterOutputStream(out, StandardCharsets.UTF_8)
        )
      } catch (error) {
        println "Script failed!"
        println error
      }
    url: "http://localhost:{{ jenkins_port }}"
    user: "{{ jenkins_api_user }}"
    password: "{{ jenkins_api_token }}"
  register: jenkins_script_result
  changed_when: false
  # If Jenkins is not running, the we'll get a "Connection refused" error. We don't want
  # this case to cause a failure, because this task may be called to backup the Jenkins
  # configuration, but if the main role tasks haven't been run yet, then Jenkins wouldn't
  # be installed. If users want to fail in such cases, it is recommended that they instead
  # use another task to "ping" the Jenkins service first.
  failed_when: >
    (jenkins_script_result is failed and
     "HTTP error -1 Request failed: <urlopen error" not in jenkins_script_result.msg) or
    "Script failed!" in jenkins_script_result.output

- name: Write Jenkins config to target file
  ansible.builtin.copy:
    content: "{{ jenkins_script_result.output }}"
    dest: "{{ jenkins_target_yaml_file }}"
    mode: "0644"
  when: jenkins_script_result is succeeded

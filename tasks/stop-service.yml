---
- name: Gather service facts
  service_facts:

- name: Stop Jenkins service
  block:
    - name: Slurp Jenkins service PID
      slurp:
        path: "{{ jenkins_pid_file }}"
      register: jenkins_pid

    - name: Ensure Jenkins service is stopped
      become: true
      service:
        name: "jenkins"
        state: stopped
        # This normally isn't required, but we also test this role in Docker containers
        # that resemble standalone hosts with SSH. Since OpenSSH has libsystemd as a
        # dependency, it will fool the service module into selecting systemd as the
        # service backend.
        use: "{{ ansible_service_mgr }}"
      # This is required or else molecule's idempotency test will fail. See:
      # https://github.com/ansible-community/molecule/issues/2765
      changed_when: false

    # Just to be safe, wait until Jenkins finally stops. Stopping services can be
    # asynchronous and so the process itself may continue to run for a bit to ensure a
    # clean shut-down. If subsequent tasks must do something with files in the Jenkins
    # home folder, this may cause problems.
    - name: Wait for Jenkins service to stop
      command: "ps -p {{ jenkins_pid['content'] | b64decode }}"  # noqa no-changed-when
      register: jenkins_service_running
      ignore_errors: true
      until: jenkins_service_running is failed
      retries: 60
      delay: 1
  when:
    - "'jenkins.service' in ansible_facts.services"
    - "ansible_facts.services['jenkins.service']['state'] != 'stopped'"
